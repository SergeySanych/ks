# Generated by Django 4.1.7 on 2023-03-29 11:58

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('home', '0004_authorslist_alter_authors_options'),
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtaildocs', '0012_uploadeddocument'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pubs',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('pubs_header', models.CharField(blank=True, max_length=250, verbose_name='Полное название публикации')),
                ('pubs_intro', wagtail.fields.RichTextField(blank=True, verbose_name='Короткое описание')),
                ('pubs_description', wagtail.fields.RichTextField(blank=True, verbose_name='Полное описание')),
                ('pubs_god', models.IntegerField(verbose_name='Год выхода публикации')),
                ('pubs_vitrina', models.BooleanField(default=False, verbose_name='Показывать витрину')),
                ('pubs_body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='subtitle')), ('paragraph', wagtail.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('leftheader', wagtail.blocks.StructBlock([('left', wagtail.blocks.CharBlock()), ('right', wagtail.blocks.RichTextBlock())])), ('imageleft', wagtail.blocks.StructBlock([('imgleft', wagtail.images.blocks.ImageChooserBlock()), ('txtright', wagtail.blocks.RichTextBlock())])), ('imagecenter', wagtail.blocks.StructBlock([('imgcenter', wagtail.images.blocks.ImageChooserBlock()), ('imgurl', wagtail.blocks.URLBlock(required=False)), ('txtcenter', wagtail.blocks.RichTextBlock(required=False))])), ('htmlcode', wagtail.blocks.RawHTMLBlock())], blank=True, use_json_field=True)),
                ('pubs_body_bottom', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='subtitle')), ('paragraph', wagtail.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('leftheader', wagtail.blocks.StructBlock([('left', wagtail.blocks.CharBlock()), ('right', wagtail.blocks.RichTextBlock())])), ('imageleft', wagtail.blocks.StructBlock([('imgleft', wagtail.images.blocks.ImageChooserBlock()), ('txtright', wagtail.blocks.RichTextBlock())])), ('htmlcode', wagtail.blocks.RawHTMLBlock())], blank=True, use_json_field=True)),
                ('pubs_author', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.authors')),
                ('pubs_components', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.components')),
                ('pubs_countries', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.countries')),
                ('pubs_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('pubs_topics', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.topics')),
            ],
            options={
                'verbose_name': 'Страница публикации',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PubDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('pubs_doc_caption', models.CharField(blank=True, max_length=250)),
                ('pubs_doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.document')),
                ('pubs_doc_key', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='pubs_documents', to='pubs.pubs')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
